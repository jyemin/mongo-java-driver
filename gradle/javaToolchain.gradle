/*
 * Copyright 2008-present MongoDB, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
final Integer DEFAULT_JDK_VERSION = 17

def javaMainProjects = subprojects - project(":util:taglets")

allprojects {

    def javaVersion = (findProperty("javaVersion") ?: DEFAULT_JDK_VERSION.toString()).toInteger()
    project.pluginManager.withPlugin("java") {
        if (!project.pluginManager.hasPlugin("scala")) {
            logger.info("Compiling ${project.name} using JDK${DEFAULT_JDK_VERSION}")
            java {
                toolchain {
                    languageVersion = JavaLanguageVersion.of(DEFAULT_JDK_VERSION)
                }
            }
        }
    }

    if (project == project(":bson-record-codec")) {
        tasks.withType(JavaCompile) {
            options.encoding = "UTF-8"
            options.release.set(17)
        }
    } else if (project in javaMainProjects) {
        tasks.withType(JavaCompile) {
            options.encoding = "UTF-8"
            options.release.set(11)
        }

        // Work around for: https://github.com/gradle/gradle/issues/15703
        tasks.withType(GroovyCompile) {
            sourceCompatibility = 11
            targetCompatibility = 11
        }
    }

    tasks.withType(Test) {
        javaLauncher.set(javaToolchains.launcherFor {
            languageVersion = JavaLanguageVersion.of(javaVersion)
        })
    }

}
